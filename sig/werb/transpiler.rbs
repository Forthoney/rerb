module WERB
  # Stack Frame Class
  class Frame
    attr_reader name: String

    attr_reader elems: Array[dom_elem]

    def initialize: (String name) -> void

    def push!: (dom_elem elem) -> nil
  end

  # Compile ERB into ruby.wasm compatible code
  class Transpiler
    @counter: Integer
    @parser: untyped
    @document_name: String
    @el_name_prefix: String
    @frames: Array[Frame]

    def initialize: (String source,
                     String document_name,
                     String root_elem_name,
                     String el_name_prefix) -> void

    def transpile: () -> String

    private

    def current_frame: () -> Frame

    def create_parser: (String source) -> untyped

    def compile_dom_elem: () -> String

    def transpile_ast: (raw_ast_node node) -> dom_elem

    def erb_to_dom: (raw_ast_node node) -> (WERB::DomElem::Container | WERB::DomElem::Container)

    def container_to_dom: (raw_ast_node node) -> WERB::DomElem::Container

    def tag_to_dom: (raw_ast_node node) -> (WERB::DomElem::Container | WERB::DomElem::Creator)

    def code_to_dom: (raw_ast_node block) -> WERB::DomElem::Code

    def extract_attributes: (untyped attr, String el_name) -> String

    def append_new_frame: (String name) -> Array[Frame]

    def generate_el_name: () -> String

    def add_to_inner_text: (String elem) -> String
  end
end
